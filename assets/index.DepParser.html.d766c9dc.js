import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";import{g as o,c as i,a as e,h as r,w as d,F as l,b as t,d as n,o as h}from"./app.b41e3990.js";const c={},f=e("h1",{id:"class-depparser",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-depparser","aria-hidden":"true"},"#"),t(" Class: DepParser")],-1),u=t("index"),p=t(".DepParser"),m=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),x=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),g=t("constructor"),b=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),y=t("data"),_=t("functions"),P=t("onVariable"),D=t("parser"),v=t("position"),k=t("utils"),R=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),T=t("callFunction"),F=t("checkFormulaResult"),N=t("getCell"),C=t("getRange"),V=t("getVariable"),E=t("parse"),O=t("retrieveRef"),j=n('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>\u2022 <strong>new DepParser</strong>(<code>config</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:25</p><h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><p>\u2022 <code>Private</code> <strong>data</strong>: <code>any</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:9</p><hr><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> functions</h3><p>\u2022 <code>Private</code> <strong>functions</strong>: <code>Object</code></p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:15</p><hr><h3 id="onvariable" tabindex="-1"><a class="header-anchor" href="#onvariable" aria-hidden="true">#</a> onVariable</h3><p>\u2022 <code>Private</code> <strong>onVariable</strong>: <code>any</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:13</p><hr><h3 id="parser" tabindex="-1"><a class="header-anchor" href="#parser" aria-hidden="true">#</a> parser</h3><p>\u2022 <code>Private</code> <strong>parser</strong>: <code>Parsing</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:17</p><hr><h3 id="position" tabindex="-1"><a class="header-anchor" href="#position" aria-hidden="true">#</a> position</h3><p>\u2022 <code>Private</code> <strong>position</strong>: <code>any</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:19</p><hr><h3 id="utils" tabindex="-1"><a class="header-anchor" href="#utils" aria-hidden="true">#</a> utils</h3><p>\u2022 <code>Private</code> <strong>utils</strong>: <code>Utils</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:11</p><h2 id="methods-1" tabindex="-1"><a class="header-anchor" href="#methods-1" aria-hidden="true">#</a> Methods</h2><h3 id="callfunction" tabindex="-1"><a class="header-anchor" href="#callfunction" aria-hidden="true">#</a> callFunction</h3><p>\u25B8 <strong>callFunction</strong>(<code>name</code>, <code>args</code>): <code>Object</code></p><p>Call an excel function.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">Function name.</td></tr><tr><td style="text-align:left;"><code>args</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">Arguments that pass to the function.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ref</code></td><td style="text-align:left;">{}</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:128</p><hr><h3 id="checkformularesult" tabindex="-1"><a class="header-anchor" href="#checkformularesult" aria-hidden="true">#</a> checkFormulaResult</h3><p>\u25B8 <strong>checkFormulaResult</strong>(<code>result</code>): <code>void</code></p><p>Check and return the appropriate formula result.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:141</p><hr><h3 id="getcell" tabindex="-1"><a class="header-anchor" href="#getcell" aria-hidden="true">#</a> getCell</h3><p>\u25B8 <strong>getCell</strong>(<code>ref</code>): <code>number</code></p><p>Get value from the cell reference</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ref</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:45</p><hr><h3 id="getrange" tabindex="-1"><a class="header-anchor" href="#getrange" aria-hidden="true">#</a> getRange</h3><p>\u25B8 <strong>getRange</strong>(<code>ref</code>): <code>number</code>[][]</p><p>Get values from the range reference.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ref</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>number</code>[][]</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:71</p><hr><h3 id="getvariable" tabindex="-1"><a class="header-anchor" href="#getvariable" aria-hidden="true">#</a> getVariable</h3>',80),w=t("\u25B8 "),B=e("strong",null,"getVariable",-1),G=t("("),q=e("code",null,"name",-1),L=t("): "),M=e("code",null,"FormulaError",-1),A=t(" | "),S=e("code",null,"0",-1),U=n('<p>TODO: Get references or values from a user defined variable.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',4),z=e("code",null,"FormulaError",-1),H=t(" | "),I=e("code",null,"0",-1),J=n('<h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:96</p><hr><h3 id="parse" tabindex="-1"><a class="header-anchor" href="#parse" aria-hidden="true">#</a> parse</h3><p>\u25B8 <strong>parse</strong>(<code>inputText</code>, <code>position</code>, <code>ignoreError?</code>): <code>any</code></p><p>Parse an excel formula and return the dependencies</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inputText</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;"><code>undefined</code></td></tr><tr><td style="text-align:left;"><code>position</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;"><code>undefined</code></td></tr><tr><td style="text-align:left;"><code>ignoreError</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>false</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>any</code></p><blockquote><p>}</p></blockquote><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:153</p><hr><h3 id="retrieveref" tabindex="-1"><a class="header-anchor" href="#retrieveref" aria-hidden="true">#</a> retrieveRef</h3><p>\u25B8 <strong>retrieveRef</strong>(<code>valueOrRef</code>): <code>any</code></p><p>Retrieve values from the given reference.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>valueOrRef</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>any</code></p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4><p>src/formula/grammar/dependency/hooks.ts:112</p>',23);function K(Q,W){const a=o("RouterLink");return h(),i(l,null,[f,e("p",null,[r(a,{to:"/formula/modules/"},{default:d(()=>[u]),_:1}),p]),m,x,e("ul",null,[e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#constructor"},{default:d(()=>[g]),_:1})])]),b,e("ul",null,[e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#data"},{default:d(()=>[y]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#functions"},{default:d(()=>[_]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#onvariable"},{default:d(()=>[P]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#parser"},{default:d(()=>[D]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#position"},{default:d(()=>[v]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#utils"},{default:d(()=>[k]),_:1})])]),R,e("ul",null,[e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#callfunction"},{default:d(()=>[T]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#checkformularesult"},{default:d(()=>[F]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#getcell"},{default:d(()=>[N]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#getrange"},{default:d(()=>[C]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#getvariable"},{default:d(()=>[V]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#parse"},{default:d(()=>[E]),_:1})]),e("li",null,[r(a,{to:"/formula/classes/index.DepParser.html#retrieveref"},{default:d(()=>[O]),_:1})])]),j,e("p",null,[w,B,G,q,L,r(a,{to:"/formula/classes/index.FormulaError.html"},{default:d(()=>[M]),_:1}),A,S]),U,e("p",null,[r(a,{to:"/formula/classes/index.FormulaError.html"},{default:d(()=>[z]),_:1}),H,I]),J],64)}var Z=s(c,[["render",K],["__file","index.DepParser.html.vue"]]);export{Z as default};
