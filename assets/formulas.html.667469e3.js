import{r as a,c as r,a as e,b as d,w as c,F as i,j as n,d as t,o as s}from"./app.70dd1b67.js";import{_ as y}from"./plugin-vue_export-helper.21dcd24c.js";const g={},u=n('<h1 id="module-formulas" tabindex="-1"><a class="header-anchor" href="#module-formulas" aria-hidden="true">#</a> Module: formulas</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> Variables</h3>',3),f=t("DateFunctions"),x=t("DistributionFunctions"),h=t("EngineeringFunctions"),m=t("FinancialFunctions"),b=t("InfoFunctions"),_=t("LogicalFunctions"),E=t("MathFunctions"),T=t("ReferenceFunctions"),N=t("StatisticalFunctions"),I=t("TextFunctions"),p=t("TrigFunctions"),S=t("WebFunctions"),A=n('<h2 id="variables-1" tabindex="-1"><a class="header-anchor" href="#variables-1" aria-hidden="true">#</a> Variables</h2><h3 id="datefunctions" tabindex="-1"><a class="header-anchor" href="#datefunctions" aria-hidden="true">#</a> DateFunctions</h3><p>\u2022 <code>Const</code> <strong>DateFunctions</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>DATE</code></td><td style="text-align:left;">(<code>year</code>: <code>any</code>, <code>month</code>: <code>any</code>, <code>day</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>DATEDIF</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>endDate</code>: <code>any</code>, <code>unit</code>: <code>any</code>) =&gt; <code>undefined</code> | <code>number</code></td></tr><tr><td style="text-align:left;"><code>DATEVALUE</code></td><td style="text-align:left;">(<code>dateText</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>DAY</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>DAYS</code></td><td style="text-align:left;">(<code>endDate</code>: <code>any</code>, <code>startDate</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>DAYS360</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>endDate</code>: <code>any</code>, <code>method</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>EDATE</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>months</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>EOMONTH</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>months</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>HOUR</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ISOWEEKNUM</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>MINUTE</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>MONTH</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>NETWORKDAYS</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>endDate</code>: <code>any</code>, <code>holidays</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>NETWORKDAYS.INTL</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>endDate</code>: <code>any</code>, <code>weekend</code>: <code>any</code>, <code>holidays</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>NOW</code></td><td style="text-align:left;">() =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SECOND</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>TIME</code></td><td style="text-align:left;">(<code>hour</code>: <code>any</code>, <code>minute</code>: <code>any</code>, <code>second</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>TIMEVALUE</code></td><td style="text-align:left;">(<code>timeText</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>TODAY</code></td><td style="text-align:left;">() =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>WEEKDAY</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>, <code>returnType</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>WEEKNUM</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>, <code>returnType</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>WORKDAY</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>days</code>: <code>any</code>, <code>holidays</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>WORKDAY.INTL</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>days</code>: <code>any</code>, <code>weekend</code>: <code>any</code>, <code>holidays</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>YEAR</code></td><td style="text-align:left;">(<code>serialOrString</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>YEARFRAC</code></td><td style="text-align:left;">(<code>startDate</code>: <code>any</code>, <code>endDate</code>: <code>any</code>, <code>basis</code>: <code>any</code>) =&gt; <code>number</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',6),O={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/date.ts#L202",target:"_blank",rel:"noopener noreferrer"},R=t("src/formula/formulas/functions/date.ts:202"),C=n('<hr><h3 id="distributionfunctions" tabindex="-1"><a class="header-anchor" href="#distributionfunctions" aria-hidden="true">#</a> DistributionFunctions</h3><p>\u2022 <code>Const</code> <strong>DistributionFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>BETA.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>alpha</code>: <code>any</code>, <code>beta</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>, <code>a</code>: <code>any</code>, <code>b</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>BETA.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>alpha</code>: <code>any</code>, <code>beta</code>: <code>any</code>, <code>a</code>: <code>any</code>, <code>b</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>BINOM.DIST</code></td><td style="text-align:left;">(<code>numberS</code>: <code>any</code>, <code>trials</code>: <code>any</code>, <code>probabilityS</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>BINOM.DIST.RANGE</code></td><td style="text-align:left;">(<code>trials</code>: <code>any</code>, <code>probabilityS</code>: <code>any</code>, <code>numberS</code>: <code>any</code>, <code>numberS2</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>BINOM.INV</code></td><td style="text-align:left;">(<code>trials</code>: <code>any</code>, <code>probabilityS</code>: <code>any</code>, <code>alpha</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CHISQ.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>degFreedom</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CHISQ.DIST.RT</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>degFreedom</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CHISQ.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>degFreedom</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CHISQ.INV.RT</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>degFreedom</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CHISQ.TEST</code></td><td style="text-align:left;">(<code>actualRange</code>: <code>any</code>, <code>expectedRange</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CONFIDENCE.NORM</code></td><td style="text-align:left;">(<code>alpha</code>: <code>any</code>, <code>std</code>: <code>any</code>, <code>size</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CONFIDENCE.T</code></td><td style="text-align:left;">(<code>alpha</code>: <code>any</code>, <code>std</code>: <code>any</code>, <code>size</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CORREL</code></td><td style="text-align:left;">(<code>array1</code>: <code>any</code>, <code>array2</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>COVARIANCE.P</code></td><td style="text-align:left;">(<code>array1</code>: <code>any</code>, <code>array2</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>COVARIANCE.S</code></td><td style="text-align:left;">(<code>array1</code>: <code>any</code>, <code>array2</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>DEVSQ</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>EXPON.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>lambda</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>F.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>d1</code>: <code>any</code>, <code>d2</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>F.DIST.RT</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>d1</code>: <code>any</code>, <code>d2</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>F.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>d1</code>: <code>any</code>, <code>d2</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>F.INV.RT</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>d1</code>: <code>any</code>, <code>d2</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>F.TEST</code></td><td style="text-align:left;">(<code>array1</code>: <code>any</code>, <code>array2</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>FISHER</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>FISHERINV</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>FORECAST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>knownYs</code>: <code>any</code>, <code>knownXs</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>FORECAST.ETS</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>FORECAST.ETS.CONFINT</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>FORECAST.ETS.SEASONALITY</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>FORECAST.ETS.STAT</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>FORECAST.LINEAR</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>knownYs</code>: <code>any</code>, <code>knownXs</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>FREQUENCY</code></td><td style="text-align:left;">(<code>dataArray</code>: <code>any</code>, <code>binsArray</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GAMMA</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GAMMA.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>alpha</code>: <code>any</code>, <code>beta</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GAMMA.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>alpha</code>: <code>any</code>, <code>beta</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GAMMALN</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GAMMALN.PRECISE</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GAUSS</code></td><td style="text-align:left;">(<code>z</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>GEOMEAN</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GROWTH</code></td><td style="text-align:left;">(<code>knownY</code>: <code>any</code>, <code>knownX</code>: <code>any</code>, <code>newX</code>: <code>any</code>, <code>useConst</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>HARMEAN</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>HYPGEOM.DIST</code></td><td style="text-align:left;">(<code>sample_s</code>: <code>any</code>, <code>number_sample</code>: <code>any</code>, <code>population_s</code>: <code>any</code>, <code>number_pop</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>INTERCEPT</code></td><td style="text-align:left;">(<code>knownYs</code>: <code>any</code>, <code>knownXs</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>KURT</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>LINEST</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>LOGEST</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>LOGNORM.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>mean</code>: <code>any</code>, <code>standard_dev</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>LOGNORM.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>mean</code>: <code>any</code>, <code>standard_dev</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>MODE.MULT</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MODE.SNGL</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>NEGBINOM.DIST</code></td><td style="text-align:left;">(<code>number_f</code>: <code>any</code>, <code>number_s</code>: <code>any</code>, <code>probability_s</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>NORM.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>mean</code>: <code>any</code>, <code>standard_dev</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>NORM.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>mean</code>: <code>any</code>, <code>standard_dev</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>NORM.S.DIST</code></td><td style="text-align:left;">(<code>z</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>NORM.S.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>PEARSON</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PERCENTILE.EXC</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PERCENTILE.INC</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PERCENTRANK.EXC</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PERCENTRANK.INC</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PERMUTATIONA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PHI</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>POISSON.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>mean</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>PROB</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>QUARTILE.EXC</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>QUARTILE.INC</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>RANK.AVG</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>RANK.EQ</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>RSQ</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>SKEW</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>SKEW.P</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>SLOPE</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>STANDARDIZE</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>mean</code>: <code>any</code>, <code>standard_dev</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>STDEV.P</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>STDEV.S</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>STDEVA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>STDEVPA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>STEYX</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>T.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>deg_freedom</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>T.DIST.2T</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>deg_freedom</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>T.DIST.RT</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>deg_freedom</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>T.INV</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>deg_freedom</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>T.INV.2T</code></td><td style="text-align:left;">(<code>probability</code>: <code>any</code>, <code>deg_freedom</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>T.TEST</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>TREND</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>TRIMMEAN</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>VAR.P</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>VAR.S</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>VARA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>VARPA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>WEIBULL.DIST</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>alpha</code>: <code>any</code>, <code>beta</code>: <code>any</code>, <code>cumulative</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>Z.TEST</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',6),D={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/distribution.ts#L11",target:"_blank",rel:"noopener noreferrer"},v=t("src/formula/formulas/functions/distribution.ts:11"),M=e("hr",null,null,-1),F=e("h3",{id:"engineeringfunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#engineeringfunctions","aria-hidden":"true"},"#"),t(" EngineeringFunctions")],-1),L=e("p",null,[t("\u2022 "),e("code",null,"Const"),t(),e("strong",null,"EngineeringFunctions"),t(": "),e("code",null,"Object")],-1),U=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),B=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BESSELI")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"x"),t(": "),e("code",null,"any"),t(", "),e("code",null,"n"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BESSELJ")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"x"),t(": "),e("code",null,"any"),t(", "),e("code",null,"n"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),V=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BESSELK")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"x"),t(": "),e("code",null,"any"),t(", "),e("code",null,"n"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BESSELY")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"x"),t(": "),e("code",null,"any"),t(", "),e("code",null,"n"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),X=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BIN2DEC")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),k=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BIN2HEX")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"string")])],-1),w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BIN2OCT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"string")])],-1),Y=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BITAND")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number1"),t(": "),e("code",null,"any"),t(", "),e("code",null,"number2"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),W=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BITLSHIFT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"shiftAmount"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),K=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BITOR")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number1"),t(": "),e("code",null,"any"),t(", "),e("code",null,"number2"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),j=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BITRSHIFT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"shiftAmount"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),Q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"BITXOR")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number1"),t(": "),e("code",null,"any"),t(", "),e("code",null,"number2"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"COMPLEX")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"realNum"),t(": "),e("code",null,"any"),t(", "),e("code",null,"iNum"),t(": "),e("code",null,"any"),t(", "),e("code",null,"suffix?"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),J=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"DEC2BIN")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"string")])],-1),Z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"DEC2HEX")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places?"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"DEC2OCT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"DELTA")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number1"),t(": "),e("code",null,"any"),t(", "),e("code",null,"number2"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"0"),t(" | "),e("code",null,"1")])],-1),ee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ERF")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"lowerLimit"),t(": "),e("code",null,"any"),t(", "),e("code",null,"upperLimit"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"ERFC")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"x"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),de=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"GESTEP")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"step"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"0"),t(" | "),e("code",null,"1")])],-1),oe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"HEX2BIN")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"string")])],-1),ce=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"HEX2DEC")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),le=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"HEX2OCT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),ne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMABS")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMAGINARY")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),re=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMARGUMENT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),ie=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMCONJUGATE")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),se=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMCOS")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),ye=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMCOSH")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),ge=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMCOT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),ue=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMCSC")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),fe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMCSCH")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),xe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMDIV")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber1"),t(": "),e("code",null,"any"),t(", "),e("code",null,"iNumber2"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),he=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMEXP")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),me=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMLN")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),be=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMLOG10")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),_e=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMLOG2")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Ee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMPOWER")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(", "),e("code",null,"number"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMPRODUCT")]),e("td",{style:{"text-align":"left"}},[t("(..."),e("code",null,"params"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Ne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMREAL")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),Ie=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMSEC")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),pe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMSECH")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Se=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMSIN")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMSINH")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Oe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMSQRT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Re=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMSUB")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber1"),t(": "),e("code",null,"any"),t(", "),e("code",null,"iNumber2"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Ce=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMSUM")]),e("td",{style:{"text-align":"left"}},[t("(..."),e("code",null,"params"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),De=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IMTAN")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"iNumber"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),ve=e("td",{style:{"text-align":"left"}},[e("code",null,"OCT2BIN")],-1),Me={style:{"text-align":"left"}},Fe=t("("),Le=e("code",null,"number",-1),Ue=t(": "),Be=e("code",null,"any",-1),He=t(", "),Pe=e("code",null,"places",-1),Ve=t(": "),Ge=e("code",null,"any",-1),Xe=t(") => "),ke=e("code",null,"string",-1),we=t(" | "),Ye=e("code",null,"FormulaError",-1),We=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"OCT2DEC")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"number")])],-1),Ke=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"OCT2HEX")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"number"),t(": "),e("code",null,"any"),t(", "),e("code",null,"places"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),je=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qe={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/engineering.ts#L51",target:"_blank",rel:"noopener noreferrer"},ze=t("src/formula/formulas/functions/engineering.ts:51"),Je=e("hr",null,null,-1),Ze=e("h3",{id:"financialfunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#financialfunctions","aria-hidden":"true"},"#"),t(" FinancialFunctions")],-1),qe=e("p",null,[t("\u2022 "),e("code",null,"Const"),t(),e("strong",null,"FinancialFunctions"),t(": "),e("code",null,"Object")],-1),$e=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),et=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),tt=e("td",{style:{"text-align":"left"}},[e("code",null,"ACCRINT")],-1),dt={style:{"text-align":"left"}},ot=n("(<code>issue</code>: <code>any</code>, <code>firstInterest</code>: <code>any</code>, <code>settlement</code>: <code>any</code>, <code>rate</code>: <code>any</code>, <code>par</code>: <code>any</code>, <code>frequency</code>: <code>any</code>, <code>basis</code>: <code>any</code>, <code>calcMethod</code>: <code>any</code>) =&gt; ",33),ct=e("code",null,"FormulaError",-1),lt=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),nt={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/financial.ts#L5",target:"_blank",rel:"noopener noreferrer"},at=t("src/formula/formulas/functions/financial.ts:5"),rt=n('<hr><h3 id="infofunctions" tabindex="-1"><a class="header-anchor" href="#infofunctions" aria-hidden="true">#</a> InfoFunctions</h3><p>\u2022 <code>Const</code> <strong>InfoFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>CELL</code></td><td style="text-align:left;">(<code>infoType</code>: <code>any</code>, <code>reference</code>: <code>any</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>ERROR.TYPE</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>INFO</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>ISBLANK</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISERR</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISERROR</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISEVEN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISLOGICAL</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISNA</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISNONTEXT</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISNUMBER</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISREF</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ISTEXT</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>N</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>NA</code></td><td style="text-align:left;">() =&gt; <code>never</code></td></tr><tr><td style="text-align:left;"><code>TYPE</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>1</code> | <code>2</code> | <code>4</code> | <code>16</code> | <code>64</code></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',6),it={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/information.ts#L20",target:"_blank",rel:"noopener noreferrer"},st=t("src/formula/formulas/functions/information.ts:20"),yt=e("hr",null,null,-1),gt=e("h3",{id:"logicalfunctions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logicalfunctions","aria-hidden":"true"},"#"),t(" LogicalFunctions")],-1),ut=e("p",null,[t("\u2022 "),e("code",null,"Const"),t(),e("strong",null,"LogicalFunctions"),t(": "),e("code",null,"Object")],-1),ft=e("h4",{id:"type-declaration-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-5","aria-hidden":"true"},"#"),t(" Type declaration")],-1),xt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ht=e("td",{style:{"text-align":"left"}},[e("code",null,"AND")],-1),mt={style:{"text-align":"left"}},bt=t("(..."),_t=e("code",null,"params",-1),Et=t(": "),Tt=e("code",null,"any",-1),Nt=t(") => "),It=e("code",null,"boolean",-1),pt=t(" | "),St=e("code",null,"FormulaError",-1),At=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"FALSE")]),e("td",{style:{"text-align":"left"}},[t("() => "),e("code",null,"boolean")])],-1),Ot=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IF")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"context"),t(": "),e("code",null,"any"),t(", "),e("code",null,"logicalTest"),t(": "),e("code",null,"any"),t(", "),e("code",null,"valueIfTrue"),t(": "),e("code",null,"any"),t(", "),e("code",null,"valueIfFalse"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IFERROR")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"value"),t(": "),e("code",null,"any"),t(", "),e("code",null,"valueIfError"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Ct=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IFS")]),e("td",{style:{"text-align":"left"}},[t("(..."),e("code",null,"params"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),Dt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"NOT")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"logical"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"boolean")])],-1),vt=e("td",{style:{"text-align":"left"}},[e("code",null,"OR")],-1),Mt={style:{"text-align":"left"}},Ft=t("(..."),Lt=e("code",null,"params",-1),Ut=t(": "),Bt=e("code",null,"any",-1),Ht=t(") => "),Pt=e("code",null,"boolean",-1),Vt=t(" | "),Gt=e("code",null,"FormulaError",-1),Xt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"SWITCH")]),e("td",{style:{"text-align":"left"}},[t("(..."),e("code",null,"params"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"void")])],-1),kt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"TRUE")]),e("td",{style:{"text-align":"left"}},[t("() => "),e("code",null,"boolean")])],-1),wt=e("td",{style:{"text-align":"left"}},[e("code",null,"XOR")],-1),Yt={style:{"text-align":"left"}},Wt=t("(..."),Kt=e("code",null,"params",-1),jt=t(": "),Qt=e("code",null,"any",-1),zt=t(") => "),Jt=e("code",null,"boolean",-1),Zt=t(" | "),qt=e("code",null,"FormulaError",-1),$t=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"IFNA")]),e("td",{style:{"text-align":"left"}},[t("("),e("code",null,"value"),t(": "),e("code",null,"any"),t(", "),e("code",null,"valueIfNa"),t(": "),e("code",null,"any"),t(") => "),e("code",null,"any")])],-1),ed=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),td={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/logical.ts#L32",target:"_blank",rel:"noopener noreferrer"},dd=t("src/formula/formulas/functions/logical.ts:32"),od=n('<hr><h3 id="mathfunctions" tabindex="-1"><a class="header-anchor" href="#mathfunctions" aria-hidden="true">#</a> MathFunctions</h3><p>\u2022 <code>Const</code> <strong>MathFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-6" tabindex="-1"><a class="header-anchor" href="#type-declaration-6" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ABS</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>AGGREGATE</code></td><td style="text-align:left;">(<code>functionNum</code>: <code>any</code>, <code>options</code>: <code>any</code>, <code>ref1</code>: <code>any</code>, ...<code>refs</code>: <code>any</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>ARABIC</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>BASE</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>radix</code>: <code>any</code>, <code>minLength</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>CEILING</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>significance</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CEILING.MATH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>significance</code>: <code>any</code>, <code>mode</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CEILING.PRECISE</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>significance</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>COMBIN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>numberChosen</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>COMBINA</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>numberChosen</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>DECIMAL</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>radix</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>DEGREES</code></td><td style="text-align:left;">(<code>radians</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>EVEN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>EXP</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>FACT</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>FACTDOUBLE</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>FLOOR</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>significance</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>FLOOR.MATH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>significance</code>: <code>any</code>, <code>mode</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>FLOOR.PRECISE</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>significance</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>GCD</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>INT</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ISO.CEILING</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>significance</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>LCM</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>LN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>LOG</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>base</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>LOG10</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>MDETERM</code></td><td style="text-align:left;">(<code>array</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>MINVERSE</code></td><td style="text-align:left;">(<code>array</code>: <code>any</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MMULT</code></td><td style="text-align:left;">(<code>array1</code>: <code>any</code>, <code>array2</code>: <code>any</code>) =&gt; <code>any</code>[]</td></tr><tr><td style="text-align:left;"><code>MOD</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>divisor</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>MROUND</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>multiple</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>MULTINOMIAL</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>MUNIT</code></td><td style="text-align:left;">(<code>dimension</code>: <code>any</code>) =&gt; <code>number</code>[][]</td></tr><tr><td style="text-align:left;"><code>ODD</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>PI</code></td><td style="text-align:left;">() =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>POWER</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>power</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>PRODUCT</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>QUOTIENT</code></td><td style="text-align:left;">(<code>numerator</code>: <code>any</code>, <code>denominator</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>RADIANS</code></td><td style="text-align:left;">(<code>degrees</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>RAND</code></td><td style="text-align:left;">() =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>RANDBETWEEN</code></td><td style="text-align:left;">(<code>bottom</code>: <code>any</code>, <code>top</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ROMAN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>form</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>ROUND</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>digits</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ROUNDDOWN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>digits</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ROUNDUP</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>digits</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SERIESSUM</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>n</code>: <code>any</code>, <code>m</code>: <code>any</code>, <code>coefficients</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>SIGN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>0</code> | <code>1</code> | <code>-1</code></td></tr><tr><td style="text-align:left;"><code>SQRT</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SQRTPI</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SUBTOTAL</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>SUM</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SUMIF</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>range</code>: <code>any</code>, <code>criteria</code>: <code>any</code>, <code>sumRange</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SUMIFS</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>SUMPRODUCT</code></td><td style="text-align:left;">(<code>array1</code>: <code>any</code>, ...<code>arrays</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SUMSQ</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SUMX2MY2</code></td><td style="text-align:left;">(<code>arrayX</code>: <code>any</code>, <code>arrayY</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SUMX2PY2</code></td><td style="text-align:left;">(<code>arrayX</code>: <code>any</code>, <code>arrayY</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SUMXMY2</code></td><td style="text-align:left;">(<code>arrayX</code>: <code>any</code>, <code>arrayY</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>TRUNC</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr></tbody></table><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',6),cd={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/math.ts#L32",target:"_blank",rel:"noopener noreferrer"},ld=t("src/formula/formulas/functions/math.ts:32"),nd=n('<hr><h3 id="referencefunctions" tabindex="-1"><a class="header-anchor" href="#referencefunctions" aria-hidden="true">#</a> ReferenceFunctions</h3><p>\u2022 <code>Const</code> <strong>ReferenceFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-7" tabindex="-1"><a class="header-anchor" href="#type-declaration-7" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ADDRESS</code></td><td style="text-align:left;">(<code>rowNumber</code>: <code>any</code>, <code>columnNumber</code>: <code>any</code>, <code>absNum</code>: <code>any</code>, <code>a1</code>: <code>any</code>, <code>sheetText</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>AREAS</code></td><td style="text-align:left;">(<code>refs</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CHOOSE</code></td><td style="text-align:left;">(<code>indexNum</code>: <code>any</code>, ...<code>values</code>: <code>any</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>COLUMN</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>obj</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>COLUMNS</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>obj</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>HLOOKUP</code></td><td style="text-align:left;">(<code>lookupValue</code>: <code>any</code>, <code>tableArray</code>: <code>any</code>, <code>rowIndexNum</code>: <code>any</code>, <code>rangeLookup</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>INDEX</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>ranges</code>: <code>any</code>, <code>rowNum</code>: <code>any</code>, <code>colNum</code>: <code>any</code>, <code>areaNum</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>MATCH</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>ROW</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>obj</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>ROWS</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>obj</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>TRANSPOSE</code></td><td style="text-align:left;">(<code>array</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>VLOOKUP</code></td><td style="text-align:left;">(<code>lookupValue</code>: <code>any</code>, <code>tableArray</code>: <code>any</code>, <code>colIndexNum</code>: <code>any</code>, <code>rangeLookup</code>: <code>any</code>) =&gt; <code>any</code></td></tr></tbody></table><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',6),ad={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/reference.ts#L14",target:"_blank",rel:"noopener noreferrer"},rd=t("src/formula/formulas/functions/reference.ts:14"),id=n('<hr><h3 id="statisticalfunctions" tabindex="-1"><a class="header-anchor" href="#statisticalfunctions" aria-hidden="true">#</a> StatisticalFunctions</h3><p>\u2022 <code>Const</code> <strong>StatisticalFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>AVEDEV</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>AVERAGE</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>AVERAGEA</code></td><td style="text-align:left;">(...<code>numbers</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>AVERAGEIF</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>range</code>: <code>any</code>, <code>criteria</code>: <code>any</code>, <code>averageRange</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>AVERAGEIFS</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>COUNT</code></td><td style="text-align:left;">(...<code>ranges</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>COUNTIF</code></td><td style="text-align:left;">(<code>range</code>: <code>any</code>, <code>criteria</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>LARGE</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MAX</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MAXA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MAXIFS</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MEDIAN</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MIN</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MINA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>MINIFS</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PERMUT</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PERMUTATIONA</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>SMALL</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',6),sd={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/statistical.ts#L8",target:"_blank",rel:"noopener noreferrer"},yd=t("src/formula/formulas/functions/statistical.ts:8"),gd=n('<hr><h3 id="textfunctions" tabindex="-1"><a class="header-anchor" href="#textfunctions" aria-hidden="true">#</a> TextFunctions</h3><p>\u2022 <code>Const</code> <strong>TextFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-9" tabindex="-1"><a class="header-anchor" href="#type-declaration-9" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ASC</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>BAHTTEXT</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CHAR</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>CLEAN</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CODE</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>CONCAT</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>CONCATENATE</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>DBCS</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>DOLLAR</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>decimals</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>EXACT</code></td><td style="text-align:left;">(<code>text1</code>: <code>any</code>, <code>text2</code>: <code>any</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>FIND</code></td><td style="text-align:left;">(<code>findText</code>: <code>any</code>, <code>withinText</code>: <code>any</code>, <code>startNum</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>FINDB</code></td><td style="text-align:left;">(<code>findText</code>: <code>any</code>, <code>withinText</code>: <code>any</code>, <code>startNum</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>FIXED</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>, <code>decimals</code>: <code>any</code>, <code>noCommas</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>LEFT</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>numChars</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>LEFTB</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>numChars</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>LEN</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>LENB</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>LOWER</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>MID</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>startNum</code>: <code>any</code>, <code>numChars</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>MIDB</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>startNum</code>: <code>any</code>, <code>numChars</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>NUMBERVALUE</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>decimalSeparator</code>: <code>any</code>, <code>groupSeparator</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>PHONETIC</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>PROPER</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>REPLACE</code></td><td style="text-align:left;">(<code>old_text</code>: <code>any</code>, <code>start_num</code>: <code>any</code>, <code>num_chars</code>: <code>any</code>, <code>new_text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>REPLACEB</code></td><td style="text-align:left;">(<code>old_text</code>: <code>any</code>, <code>start_num</code>: <code>any</code>, <code>num_chars</code>: <code>any</code>, <code>new_text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>REPT</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>number_times</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>RIGHT</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>numChars</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>RIGHTB</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>numChars</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>SEARCH</code></td><td style="text-align:left;">(<code>findText</code>: <code>any</code>, <code>withinText</code>: <code>any</code>, <code>startNum</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>SEARCHB</code></td><td style="text-align:left;">(<code>findText</code>: <code>any</code>, <code>withinText</code>: <code>any</code>, <code>startNum</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>SUBSTITUTE</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>never</code></td></tr><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>TEXT</code></td><td style="text-align:left;">(<code>value</code>: <code>any</code>, <code>formatText</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>TEXTJOIN</code></td><td style="text-align:left;">(...<code>params</code>: <code>any</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>TRIM</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr><tr><td style="text-align:left;"><code>UNICHAR</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>UNICODE</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>any</code></td></tr></tbody></table><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4>',6),ud={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/text.ts#L46",target:"_blank",rel:"noopener noreferrer"},fd=t("src/formula/formulas/functions/text.ts:46"),xd=n('<hr><h3 id="trigfunctions" tabindex="-1"><a class="header-anchor" href="#trigfunctions" aria-hidden="true">#</a> TrigFunctions</h3><p>\u2022 <code>Const</code> <strong>TrigFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ACOS</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ACOSH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ACOT</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ACOTH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ASIN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ASINH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ATAN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ATAN2</code></td><td style="text-align:left;">(<code>x</code>: <code>any</code>, <code>y</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>ATANH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>COS</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>COSH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>COT</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>COTH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CSC</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>CSCH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SEC</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SECH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SIN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>SINH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>TAN</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr><tr><td style="text-align:left;"><code>TANH</code></td><td style="text-align:left;">(<code>number</code>: <code>any</code>) =&gt; <code>number</code></td></tr></tbody></table><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',6),hd={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/trigonometry.ts#L8",target:"_blank",rel:"noopener noreferrer"},md=t("src/formula/formulas/functions/trigonometry.ts:8"),bd=n('<hr><h3 id="webfunctions" tabindex="-1"><a class="header-anchor" href="#webfunctions" aria-hidden="true">#</a> WebFunctions</h3><p>\u2022 <code>Const</code> <strong>WebFunctions</strong>: <code>Object</code></p><h4 id="type-declaration-11" tabindex="-1"><a class="header-anchor" href="#type-declaration-11" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ENCODEURL</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>) =&gt; <code>string</code></td></tr><tr><td style="text-align:left;"><code>FILTERXML</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>WEBSERVICE</code></td><td style="text-align:left;">(<code>context</code>: <code>any</code>, <code>url</code>: <code>any</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;</td></tr></tbody></table><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',6),_d={href:"https://github.com/sleiphur/vma-grid/blob/49161a2/src/formula/formulas/functions/web.ts#L6",target:"_blank",rel:"noopener noreferrer"},Ed=t("src/formula/formulas/functions/web.ts:6");function Td(Nd,Id){const o=a("RouterLink"),l=a("ExternalLinkIcon");return s(),r(i,null,[u,e("ul",null,[e("li",null,[d(o,{to:"/formula/modules/formulas.html#datefunctions"},{default:c(()=>[f]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#distributionfunctions"},{default:c(()=>[x]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#engineeringfunctions"},{default:c(()=>[h]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#financialfunctions"},{default:c(()=>[m]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#infofunctions"},{default:c(()=>[b]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#logicalfunctions"},{default:c(()=>[_]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#mathfunctions"},{default:c(()=>[E]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#referencefunctions"},{default:c(()=>[T]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#statisticalfunctions"},{default:c(()=>[N]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#textfunctions"},{default:c(()=>[I]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#trigfunctions"},{default:c(()=>[p]),_:1})]),e("li",null,[d(o,{to:"/formula/modules/formulas.html#webfunctions"},{default:c(()=>[S]),_:1})])]),A,e("p",null,[e("a",O,[R,d(l)])]),C,e("p",null,[e("a",D,[v,d(l)])]),M,F,L,U,e("table",null,[B,e("tbody",null,[H,P,V,G,X,k,w,Y,W,K,j,Q,z,J,Z,q,$,ee,te,de,oe,ce,le,ne,ae,re,ie,se,ye,ge,ue,fe,xe,he,me,be,_e,Ee,Te,Ne,Ie,pe,Se,Ae,Oe,Re,Ce,De,e("tr",null,[ve,e("td",Me,[Fe,Le,Ue,Be,He,Pe,Ve,Ge,Xe,ke,we,d(o,{to:"/formula/classes/index.FormulaError.html"},{default:c(()=>[Ye]),_:1})])]),We,Ke])]),je,e("p",null,[e("a",Qe,[ze,d(l)])]),Je,Ze,qe,$e,e("table",null,[et,e("tbody",null,[e("tr",null,[tt,e("td",dt,[ot,d(o,{to:"/formula/classes/index.FormulaError.html"},{default:c(()=>[ct]),_:1})])])])]),lt,e("p",null,[e("a",nt,[at,d(l)])]),rt,e("p",null,[e("a",it,[st,d(l)])]),yt,gt,ut,ft,e("table",null,[xt,e("tbody",null,[e("tr",null,[ht,e("td",mt,[bt,_t,Et,Tt,Nt,It,pt,d(o,{to:"/formula/classes/index.FormulaError.html"},{default:c(()=>[St]),_:1})])]),At,Ot,Rt,Ct,Dt,e("tr",null,[vt,e("td",Mt,[Ft,Lt,Ut,Bt,Ht,Pt,Vt,d(o,{to:"/formula/classes/index.FormulaError.html"},{default:c(()=>[Gt]),_:1})])]),Xt,kt,e("tr",null,[wt,e("td",Yt,[Wt,Kt,jt,Qt,zt,Jt,Zt,d(o,{to:"/formula/classes/index.FormulaError.html"},{default:c(()=>[qt]),_:1})])]),$t])]),ed,e("p",null,[e("a",td,[dd,d(l)])]),od,e("p",null,[e("a",cd,[ld,d(l)])]),nd,e("p",null,[e("a",ad,[rd,d(l)])]),id,e("p",null,[e("a",sd,[yd,d(l)])]),gd,e("p",null,[e("a",ud,[fd,d(l)])]),xd,e("p",null,[e("a",hd,[md,d(l)])]),bd,e("p",null,[e("a",_d,[Ed,d(l)])])],64)}var Ad=y(g,[["render",Td],["__file","formulas.html.vue"]]);export{Ad as default};
